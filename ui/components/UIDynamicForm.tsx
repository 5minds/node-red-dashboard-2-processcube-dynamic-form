import { DynamicUi } from '@5minds/processcube_app_sdk/client';
import '@5minds/processcube_app_sdk/client/components/DynamicUi/DynamicUi.css';
import React from 'react';

export default function UIDynamicForm() {
    const usertask = {
        actualOwnerId: null,
        finishedByUserId: null,
        userTaskConfig: {
            formFields: [
                {
                    id: 'checkbox',
                    label: 'Checkbox',
                    type: 'checkbox',
                    customForm: '{"entries":[{"key":"key","value":"value"}],"hint":"hint"}',
                },
                {
                    id: 'colorpicker',
                    label: 'Colorpicker',
                    type: 'color',
                    defaultValue: '#e32626',
                    customForm: '{"hint":"hint"}',
                },
                {
                    id: 'date',
                    label: 'Date',
                    type: 'date',
                    defaultValue: '2024-10-18',
                    customForm: '{"hint":"hint"}',
                },
                {
                    id: 'datetime',
                    label: 'Datetime',
                    type: 'datetime-local',
                    defaultValue: '2024-10-19T12:41',
                    customForm: '{"hint":"hint"}',
                },
                { id: 'email', label: 'Email', type: 'email', customForm: '{"hint":"hint"}' },
                { id: 'header', type: 'header', defaultValue: 'Header' },
                { id: 'hidden', type: 'hidden', defaultValue: 'hidden' },
                { id: 'number', label: 'Number', type: 'number', customForm: '{"step":1.5,"hint":"hint"}' },
                {
                    id: 'month',
                    label: 'Month',
                    type: 'month',
                    defaultValue: '2024-07',
                    customForm: '{"hint":"hint"}',
                },
                { id: 'paragraph', type: 'paragraph', defaultValue: 'A lot of words...' },
                { id: 'password', label: 'Pasword', type: 'password', customForm: '{"hint":"hint"}' },
                {
                    id: 'radio',
                    label: 'Radio',
                    type: 'radio',
                    customForm: '{"entries":[{"key":"key","value":"value"}],"hint":"hint"}',
                },
                {
                    id: 'range',
                    label: 'Range',
                    type: 'range',
                    defaultValue: '30',
                    customForm: '{"step":0.4,"min":3,"hint":"hint"}',
                },
                {
                    id: 'select',
                    label: 'Select',
                    type: 'select',
                    customForm: '{"entries":[{"key":"key","value":"value"}],"hint":"hint"}',
                },
                { id: 'tel', label: 'Tel.', type: 'tel', customForm: '{"hint":"hint"}' },
                { id: 'text', label: 'Text', type: 'string', customForm: '{"hint":"hint"}' },
                {
                    id: 'textarea',
                    label: 'Textarea',
                    type: 'textarea',
                    defaultValue: 'more words...',
                    customForm: '{"rows":14,"hint":"hint"}',
                },
                { id: 'time', label: 'Time', type: 'time', defaultValue: '11:54', customForm: '{"hint":"hint"}' },
                { id: 'url', label: 'URL', type: 'url', customForm: '{"hint":"hint"}' },
                {
                    id: 'week',
                    label: 'Week',
                    type: 'week',
                    defaultValue: '2024-W37',
                    customForm: '{"hint":"hint"}',
                },
            ],
        },
        userTaskConfigModel: {
            formFields: [
                {
                    id: 'checkbox',
                    label: 'Checkbox',
                    type: 'checkbox',
                    customForm: '{"entries":[{"key":"key","value":"value"}],"hint":"hint"}',
                },
                {
                    id: 'colorpicker',
                    label: 'Colorpicker',
                    type: 'color',
                    defaultValue: '#e32626',
                    customForm: '{"hint":"hint"}',
                },
                {
                    id: 'date',
                    label: 'Date',
                    type: 'date',
                    defaultValue: '2024-10-18',
                    customForm: '{"hint":"hint"}',
                },
                {
                    id: 'datetime',
                    label: 'Datetime',
                    type: 'datetime-local',
                    defaultValue: '2024-10-19T12:41',
                    customForm: '{"hint":"hint"}',
                },
                { id: 'email', label: 'Email', type: 'email', customForm: '{"hint":"hint"}' },
                { id: 'header', type: 'header', defaultValue: 'Header' },
                { id: 'hidden', type: 'hidden', defaultValue: 'hidden' },
                { id: 'number', label: 'Number', type: 'number', customForm: '{"step":1.5,"hint":"hint"}' },
                {
                    id: 'month',
                    label: 'Month',
                    type: 'month',
                    defaultValue: '2024-07',
                    customForm: '{"hint":"hint"}',
                },
                { id: 'paragraph', type: 'paragraph', defaultValue: 'A lot of words...' },
                { id: 'password', label: 'Pasword', type: 'password', customForm: '{"hint":"hint"}' },
                {
                    id: 'radio',
                    label: 'Radio',
                    type: 'radio',
                    customForm: '{"entries":[{"key":"key","value":"value"}],"hint":"hint"}',
                },
                {
                    id: 'range',
                    label: 'Range',
                    type: 'range',
                    defaultValue: '30',
                    customForm: '{"step":0.4,"min":3,"hint":"hint"}',
                },
                {
                    id: 'select',
                    label: 'Select',
                    type: 'select',
                    customForm: '{"entries":[{"key":"key","value":"value"}],"hint":"hint"}',
                },
                { id: 'tel', label: 'Tel.', type: 'tel', customForm: '{"hint":"hint"}' },
                { id: 'text', label: 'Text', type: 'string', customForm: '{"hint":"hint"}' },
                {
                    id: 'textarea',
                    label: 'Textarea',
                    type: 'textarea',
                    defaultValue: 'more words...',
                    customForm: '{"rows":14,"hint":"hint"}',
                },
                { id: 'time', label: 'Time', type: 'time', defaultValue: '11:54', customForm: '{"hint":"hint"}' },
                { id: 'url', label: 'URL', type: 'url', customForm: '{"hint":"hint"}' },
                {
                    id: 'week',
                    label: 'Week',
                    type: 'week',
                    defaultValue: '2024-W37',
                    customForm: '{"hint":"hint"}',
                },
            ],
        },
        assignedUserIds: null,
        multiInstanceMetadataId: '1f5a946e-5349-46f7-8914-0e25096b5f20',
        multiInstanceStartToken: {},
        multiInstanceEndToken: {},
        flowNodeInstanceId: '129bb9ec-7660-4dbc-a11e-ca174a701ebc',
        flowNodeId: 'user_task',
        flowNodeName: 'User Task',
        flowNodeLane: '',
        flowNodeType: 'bpmn:UserTask',
        eventType: null,
        state: 'suspended',
        previousFlowNodeInstanceId: '0076eaee-4f97-4f6d-b4ad-a066877b6aa4',
        parentProcessInstanceId: null,
        processDefinitionId: 'User-Task-Sample_Definition',
        processModelId: 'User-Task-Sample_Process',
        processInstanceId: '23d53ef8-f28c-4b47-9a70-d8b37d293a27',
        correlationId: '8a0bc873-568d-49dc-b304-41efb5b92ec2',
        ownerId: 'dummy_token',
        startToken: {},
        endToken: {},
        startedAt: '2024-10-23T09:40:22.755Z',
    };
    return <DynamicUi task={usertask as any} onSubmit={() => console.log("amk") as any} />;
}

